generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Region {
  EU
  NA
  ASIA
}

enum Tier {
  BASE
  SACRED
  ANCESTRAL
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  region        Region?
  battletag     String?
  accounts      Account[]
  sessions      Session[]
  Listing       Listing[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Listing {
  id       String  @id @default(cuid())
  name     String?
  power    Int
  tier     Tier
  stats    Stat[]
  price    String?
  createdAt DateTime @default(now())

  listerId String
  typeId String

  type     Type   @relation(fields: [typeId], references: [id])
  lister   User   @relation(fields: [listerId], references: [id], onDelete: Cascade)

  @@index([typeId])
  @@index([listerId])
}

model Type {
  id      String    @id @default(cuid())
  name    String
  Listing Listing[]
}

model Stat {
  id        String  @id @default(cuid())
  listingId String
  name      String
  range     String
  Listing   Listing @relation(fields: [listingId], references: [id])

  @@index([listingId])
}
